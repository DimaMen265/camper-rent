{"version":3,"file":"static/js/149.ab542c7d.chunk.js","mappings":"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","sources":["webpack://camper-rent/./src/components/CatalogList/CatalogList.module.css?f754","components/CatalogList/CatalogList.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"catalogList\":\"CatalogList_catalogList__rQuHA\",\"catalogItem\":\"CatalogList_catalogItem__YxN79\",\"advertImage\":\"CatalogList_advertImage__S1LjX\",\"advertContent\":\"CatalogList_advertContent__bVOwo\",\"advertHeader\":\"CatalogList_advertHeader__76yZK\",\"headerFirst\":\"CatalogList_headerFirst__mdzKY\",\"advertTitle\":\"CatalogList_advertTitle__sObOA\",\"priceContainer\":\"CatalogList_priceContainer__jyDXH\",\"buttonFavorite\":\"CatalogList_buttonFavorite__V5Wdh\",\"iconFavorite\":\"CatalogList_iconFavorite__Telkl\",\"iconFavoriteActive\":\"CatalogList_iconFavoriteActive__SnZQ8\",\"headerSecond\":\"CatalogList_headerSecond__2a3oN\",\"subContainer\":\"CatalogList_subContainer__Oh0Sf\",\"iconStar\":\"CatalogList_iconStar__1HlT8\",\"textRating\":\"CatalogList_textRating__adj+O\",\"textLocation\":\"CatalogList_textLocation__P-Loq\",\"iconWrapper\":\"CatalogList_iconWrapper__8b-Ud\",\"iconWrapperSecond\":\"CatalogList_iconWrapperSecond__TN7Ac\",\"description\":\"CatalogList_description__lOMqB\",\"detailsContainer\":\"CatalogList_detailsContainer__Eh0US\",\"detail\":\"CatalogList_detail__pS1Oa\",\"detailHidden\":\"CatalogList_detailHidden__U8T65\",\"detailText\":\"CatalogList_detailText__njdZS\",\"buttonShowMore\":\"CatalogList_buttonShowMore__dQYeh\",\"noContainer\":\"CatalogList_noContainer__fFAe1\",\"noTitle\":\"CatalogList_noTitle__wreTe\"};","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAdverts } from \"../../redux/operations\";\nimport { selectAdverts } from \"../../redux/selectors\";\n\nimport { ButtonLoadMore } from \"../ButtonLoadMore/ButtonLoadMore\";\nimport { AdvertModal } from \"../AdvertModal/AdvertModal\";\nimport clsx from \"clsx\";\nimport styles from \"./CatalogList.module.css\";\nimport icons from \"../../images/sprite.svg\";\nimport camper from \"../../images/camper.png\";\n\nexport const CatalogList = () => {\n    const [favorites, setFavorites] = useState([]);\n    const [limit, setLimit] = useState(4);\n    const adverts = useSelector(selectAdverts);\n    const advertsPag = adverts.slice(0, limit);\n    const currentCount = advertsPag.length;\n    const totalCount = adverts.length;\n\n    const handleLoadMore = () => {\n        setLimit(limit + 4);\n    };\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAdverts());\n        const storedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n        setFavorites(storedFavorites);\n    }, [dispatch]);\n\n    const handleAddFavorite = (advert) => {\n        const index = favorites.findIndex(item => item._id === advert._id);\n        let updatedFavorites = [];\n\n        if (index === -1) {\n            updatedFavorites = [...favorites, advert];\n        } else {\n            updatedFavorites = favorites.filter(item => item._id !== advert._id);\n        };\n\n        setFavorites(updatedFavorites);\n        localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    };\n\n    const isFavorite = (advertId) => {\n        return favorites.some((item) => item._id === advertId);\n    };\n\n    const [openModal, setOpenModal] = useState(false);\n    const [selectedAdvertId, setSelectedAdvertId] = useState(null);\n    const handleOpenModal = (advertId) => {\n        setSelectedAdvertId(advertId);\n        setOpenModal(true);\n    };\n    const handleCloseModal = () => setOpenModal(false);\n\n    return (\n        <>\n            {totalCount !== 0 ?\n                (\n                    <div>\n                        <ul className={styles.catalogList}>\n                            {advertsPag.map(advert => (\n                                <li key={advert._id} className={styles.catalogItem}>\n                                    <img src={advert.gallery[0]} alt=\"Advert\" width={290} height={310} className={styles.advertImage} />\n                                    <div className={styles.advertContent}>\n                                        <div className={styles.advertHeader}>\n                                            <div className={styles.headerFirst}>\n                                                <h2 className={styles.advertTitle}>{advert.name}</h2>\n                                                <div className={styles.priceContainer}>\n                                                    <h2 className={styles.advertTitle}>€{advert.price},00</h2>\n                                                    <button type=\"click\" onClick={() => handleAddFavorite(advert)} className={styles.buttonFavorite}>\n                                                        <svg width={24} height={24} className={clsx(\n                                                            styles.iconFavorite,\n                                                            { [styles.iconFavoriteActive]: isFavorite(advert._id) }\n                                                        )}>\n                                                            <use href={`${icons}#icon-heart`}></use>\n                                                        </svg>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                            <div className={styles.headerSecond}>\n                                                <div className={styles.subContainer}>\n                                                    <svg width={16} height={16} className={styles.iconStar}>\n                                                        <use href={`${icons}#icon-star`}></use>\n                                                    </svg>\n                                                    <p className={styles.textRating}>{`${advert.rating}(${advert.reviews.length} Reviews)`}</p>\n                                                </div>\n                                                <div className={styles.subContainer}>\n                                                    <svg width={16} height={16} className={styles.iconWrapper}>\n                                                        <use href={`${icons}#icon-location`}></use>\n                                                    </svg>\n                                                    <p className={styles.textLocation}>{advert.location}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <p className={styles.description}>{advert.description.split(\" \").slice(0, 10).join(\" \")}...</p>\n                                        <div className={styles.detailsContainer}>\n                                            <div className={clsx(\n                                                advert.adults !== 0 && styles.detail,\n                                                advert.adults === 0 && styles.detailHidden\n                                            )}>\n                                                <svg width={20} height={20} className={styles.iconWrapperSecond}>\n                                                    <use href={`${icons}#icon-users`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>{advert.adults} adults</p>\n                                            </div>\n                                            <div className={clsx(\n                                                advert.children !== 0 && styles.detail,\n                                                advert.children === 0 && styles.detailHidden\n                                            )}>\n                                                <svg width={20} height={20} className={styles.iconWrapperSecond}>\n                                                    <use href={`${icons}#icon-users`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>{advert.children} children</p>\n                                            </div>\n                                            <div className={clsx(\n                                                advert.transmission !== \"\" && styles.detail,\n                                                advert.transmission === \"\" && styles.detailHidden\n                                            )}>\n                                                <svg width={20} height={20} className={styles.iconWrapper}>\n                                                    <use href={`${icons}#icon-transmission`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>{advert.transmission}</p>\n                                            </div>\n                                            <div className={clsx(\n                                                advert.engine !== \"\" && styles.detail,\n                                                advert.engine === \"\" && styles.detailHidden\n                                            )}>\n                                                <svg width={20} height={20} className={styles.iconWrapperSecond}>\n                                                    <use href={`${icons}#icon-gas-station`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>{advert.engine}</p>\n                                            </div>\n                                            <div className={clsx(\n                                                advert.kitchen !== 0 && styles.detail,\n                                                advert.kitchen === 0 && styles.detailHidden\n                                            )}>\n                                                <svg width={20} height={20} className={styles.iconWrapper}>\n                                                    <use href={`${icons}#icon-cutlery`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>Kitchen</p>\n                                            </div>\n                                            <div className={clsx(\n                                                advert.beds !== 0 && styles.detail,\n                                                advert.beds === 0 && styles.detailHidden\n                                            )}>\n                                                <svg width={20} height={20} className={styles.iconWrapper}>\n                                                    <use href={`${icons}#icon-bed`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>{advert.details.beds} beds</p>\n                                            </div>\n                                            <div className={styles.detail}>\n                                                <svg width={20} height={20} className={styles.iconWrapperSecond}>\n                                                    <use href={`${icons}#icon-wind`}></use>\n                                                </svg>\n                                                <p className={styles.detailText}>AC</p>\n                                            </div>\n                                        </div>\n                                        <button type=\"click\" onClick={() => handleOpenModal(advert._id)} className={styles.buttonShowMore}>Show more</button>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                        {openModal && <AdvertModal advertId={selectedAdvertId} onClose={handleCloseModal} />}\n                        {\n                            totalCount !== 0 &&\n                            totalCount >= currentCount &&\n                            totalCount !== currentCount &&\n                            <ButtonLoadMore onClick={handleLoadMore} />\n                        }\n                    </div>\n                ) : (\n                    <div className={styles.noContainer}>\n                        <img src={camper} alt=\"Camper\" />\n                        <h1 className={styles.noTitle}>No favorites adverts...</h1>\n                    </div>\n                )\n            }\n        </>\n    );\n};\n","import React from \"react\"\nimport { CatalogList } from \"../../components/CatalogList/CatalogList\"\n\nconst Catalog = () => {\n    return (\n        <>\n            <CatalogList />\n        </>\n    );\n};\n\nexport default Catalog;\n"],"names":["CatalogList","_useState","useState","_useState2","_slicedToArray","favorites","setFavorites","_useState3","_useState4","limit","setLimit","adverts","useSelector","selectAdverts","advertsPag","slice","currentCount","length","totalCount","dispatch","useDispatch","useEffect","getAdverts","storedFavorites","JSON","parse","localStorage","getItem","_useState5","_useState6","openModal","setOpenModal","_useState7","_useState8","selectedAdvertId","setSelectedAdvertId","_jsx","_Fragment","children","_jsxs","className","styles","map","advert","src","gallery","alt","width","height","name","price","type","onClick","updatedFavorites","findIndex","item","_id","concat","_toConsumableArray","filter","setItem","stringify","handleAddFavorite","clsx","_defineProperty","advertId","some","href","icons","rating","reviews","location","description","split","join","adults","transmission","engine","kitchen","beds","details","handleOpenModal","AdvertModal","onClose","ButtonLoadMore","camper"],"sourceRoot":""}